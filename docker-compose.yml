version: '3.4'

networks:
  frontend:
  backend:

services:
  ##############
  # PostgreSQL #
  ##############
  postgresql:
    image: 'postgres:9.6'
    environment:
      POSTGRES_USER: 'ta-mere'
      POSTGRES_PASSWORD: 'ta-mere'
      POSTGRES_DB: 'ta-mere'
    networks:
      - backend
    volumes:
      - ./postgresql:/docker-entrypoint-initdb.d

  ######################
  # Django application #
  ######################
  django:
    image: 'ta-mere-en-slip'
    build:
      context: .
    volumes:
      - .:/code
    environment:
      APP_TYPE: 'django'
      DJANGO_ENVIRONMENT: 'dev'
      DJANGO_DEBUG: 'true'
      DJANGO_DB_NAME: 'ta-mere'
      DJANGO_DB_USER: 'ta-mere'
      DJANGO_DB_PASS: 'ta-mere'
      DJANGO_DB_HOST: 'postgresql'
    networks:
      - backend
      - frontend
    depends_on:
      - postgresql
    command: [ './docker-entrypoint.sh' ]

  ##################
  # VueJS frontend #
  ##################
  vuejs:
    image: 'vuejs'
    build:
      context: frontend
      target: devel-stage
    volumes:
      - ./frontend:/app
    environment:
      NPM_CONFIG_PREFIX: /tmp
    networks:
      - frontend
    command: sh -c 'npm install && npm install --only=dev && npm run serve'
